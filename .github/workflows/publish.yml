name: Publish to PyPI

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      target:
        description: 'Publish target'
        required: true
        default: 'testpypi'
        type: choice
        options:
          - testpypi
          - pypi

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*
    
    # Try using Trusted Publisher first (recommended)
    - name: Publish to TestPyPI (Trusted Publisher)
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'testpypi'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
      continue-on-error: true
      id: trusted-publish-test
    
    # Fallback to API token if Trusted Publisher fails
    - name: Publish to TestPyPI (API Token)
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'testpypi' && steps.trusted-publish-test.outcome == 'failure'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        twine upload --repository-url https://test.pypi.org/legacy/ dist/*
    
    # Try using Trusted Publisher first (recommended)
    - name: Publish to PyPI (Trusted Publisher)
      if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'pypi')
      uses: pypa/gh-action-pypi-publish@release/v1
      continue-on-error: true
      id: trusted-publish
    
    # Fallback to API token if Trusted Publisher fails
    - name: Publish to PyPI (API Token)
      if: (github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.target == 'pypi')) && steps.trusted-publish.outcome == 'failure'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*